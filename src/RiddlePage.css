.riddle-page {
    box-sizing: border-box;
    height: 100%;
    min-height: 100%;
    padding: 5% 8% 8%;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
}

.riddle {
    height: min(100%, 500px);
    width: min(100%, 800px);
    margin-inline: auto;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

@media (max-width: 700px) {
    .riddle {
        height: 100%;
    }
}

.question {
    text-align: center;
    margin-bottom: 2em;
}

.question>h1 {
    font-size: 2.2em;
    margin-bottom: 1em;
}

.question>p {
    font-size: 1.2em;
    overflow-y: auto;
}

.answers {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1em;
}

@media (max-width: 700px) {
    .answers {
        grid-template-columns: 1fr;
    }
}

.answers>button {
    transition: background-color 1s;
}

.progress-bar {
    width: min(90%, 900px);
    position: relative;
    margin-top: 1em;
    margin-inline: auto;
    display: flex;
    align-items: center;
}

.progress-bar progress {
    width: 100%;
    accent-color: white;
}

.nodes {
    position: absolute;
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.nodes>span {
    text-align: center;
    background-color: white;
    border-radius: 50%;
    height: 1.5em;
    width: 1.5em;
}

@media (max-width: 700px) {
    .nodes>span:nth-child(even) {
        visibility: hidden;
    }
}

.nodes>span.answered {
    background-color: white;
    border: 1px solid #858585;
}

.nodes>span.not-answered {
    background-color: #3b3b3b;
    color: white;
    border: 1px solid #858585;
}

.timer {
    text-align: center;
    font-size: 2em;
    color: white;
    font-weight: 600;
}

@media (max-width: 700px) {
    .timer {
        text-align: start;
        margin-bottom: .5em;
    }
}

.timer.yellow {
    color: rgb(240, 219, 128);
}

.timer.red {
    color: lightcoral;
}

.result {
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 2em 3em;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 3em;
    background-color: #0f0f0fcc;
    color: white;
    font-size: 1.1em;
}

@media (max-width: 700px) {
    .result {
        flex-direction: column;
        align-items: start;
    }
}

.result.correct {
    color: lightgreen;
}

.result.incorrect, .result.timeout {
    color: lightcoral;
}

.result h1 {
    margin-top: 0;
}

::-webkit-scrollbar {
    width: .2em;
}

/* Track */
::-webkit-scrollbar-track {
    background: #3b3b3b;
    -webkit-border-radius: 10px;
    border-radius: 10px;
}

/* Handle */
::-webkit-scrollbar-thumb {
    -webkit-border-radius: 10px;
    border-radius: 10px;
    background: white;
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);
}

.result button {
    position: relative;
    background-color: transparent;
    height: max-content;
    min-width: max-content;
    color: inherit;
    border-color: inherit;
    display: flex;
    align-items: center;
    overflow: hidden;
    z-index: 0;
    transition: all .15s;
}

.result button:hover {
    color: #0f0f0f;
}

.result button::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 0%;
    bottom: 0;
    right: 0;
    z-index: -1;
    transition: all .15s;
}

.result button:hover::before {
    height: 100%;
}

.result.correct button::before {
    background-color: lightgreen;
}

.result.incorrect button::before {
    background-color: lightcoral;
}

.result button svg {
    height: 1em;
    margin: 0 .5em;
    transition: .25s;
}

.result button:hover svg {
    fill: #0f0f0f !important;
}

.result.correct button svg {
    fill: lightgreen;
}

.result.incorrect button svg, .result.timeout button svg {
    fill: lightcoral;
}

button:disabled {
    cursor: default;
}

button:hover:disabled {
    border-color: transparent;
}

button:active:disabled {
    background-color: #0f0f0f98;
}

.result-animation-enter {
    transform: translateY(100%);
}

.result-animation-enter-active {
    transform: translateY(0%);
    transition: all .15s ease-out;
}

.result-animation-exit {
    transform: translateY(0%);
}

.result-animation-exit-active {
    transform: translateY(100%);
    transition: all .15s ease-out;
}

.result summary {
    display: flex;
    align-items: center;
    gap: .5em;
    max-width: max-content;
    text-decoration: none;
    border-bottom: 2px solid transparent;
    transition: border-color .25s;
}

.result.correct summary:hover {
    border-color: lightgreen;
}

.result.incorrect summary:hover, .result.timeout summary:hover {
    border-color: lightcoral;
}

.result summary {
    list-style: none;
}

.result summary .arrow {
    transition: all .5s;
}

.result.correct summary .arrow {
    fill: lightgreen;
}

.result.incorrect summary .arrow, .result.timeout summary .arrow {
    fill: lightcoral;
}

.result details[open] .arrow {
    transform: rotate(180deg);
}

.hidden {
    visibility: hidden;
}